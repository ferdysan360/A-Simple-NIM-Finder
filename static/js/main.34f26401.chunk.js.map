{"version":3,"sources":["components/PostForm.js","App.js","serviceWorker.js","index.js"],"names":["PostForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setCookie","jsonUser","date","Date","setDate","getDate","string","toUTCString","document","cookie","serialize","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","optionRegister","e","setState","option","optionLogin","assignToken","tokenTemp","token","assignMahasiswa","data","mahasiswa","searchTypeName","searchType","page","searchTemp","state","search","searchTypeId","handleChange","defineProperty","target","name","value","handleNext","handlePrev","handleSearch","preventDefault","prev","query","count","getRequest","method","url","headers","Auth-Token","axios","then","response","statusSearch","status","code","next","catch","error","console","log","payload","ReactDOM","render","react_default","a","createElement","getElementById","user","handleRegisterLogin","username","password","postRequest","Content-Type","statusLogin","JSON","stringify","cookieList","split","userTemp","jsonParse","parse","replace","_this$state","onSubmit","placeholder","ref","type","onChange","className","onClick","id","length","map","mhs","key","nim_tpb","nim_jur","prodi","align","disabled","React","Component","App","components_PostForm","Boolean","window","location","hostname","match","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.34f26401.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport axios from 'axios'\r\n\r\n\r\nclass PostForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)    \r\n\r\n        var cookie = document.cookie\r\n        var cookieList = cookie.split(\";\")\r\n        var tokenTemp = \"\"\r\n        var userTemp = \"\"\r\n        \r\n        if (cookie !== \"\") {\r\n            var jsonParse = JSON.parse(cookieList[0].replace(\"username=\",\"\"))\r\n            userTemp = jsonParse.username\r\n            tokenTemp = jsonParse.token\r\n        }\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            option: \"\",\r\n            token: tokenTemp, \r\n            search: \"\",\r\n            searchTemp: \"\",\r\n            count: 20,\r\n            page: 0,\r\n            searchType: \"\",\r\n            mahasiswa: [],\r\n            prev: true,\r\n            next: true,\r\n            user: userTemp\r\n        }\r\n    }\r\n\r\n    // Fungsi untuk meng-handle perubahan cookie\r\n    setCookie = function (jsonUser) {\r\n        var date = new Date();\r\n        date.setDate(date.getDate() + 1);\r\n        var expires = \";expires=\" + date.toUTCString();\r\n        var string = \"username=\" + jsonUser + expires + \";path=/;\";\r\n        document.cookie = string;\r\n    }\r\n\r\n    /* \r\n    serialize function: mengubah {obj} menjadi bentuk url-encoded\r\n    */\r\n    serialize = function (obj) {\r\n        var str = [];\r\n        for (var p in obj)\r\n            if (obj.hasOwnProperty(p)) {\r\n                str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n            }\r\n        return str.join(\"&\");\r\n    }\r\n\r\n    // Fungsi untuk meng-handle pilihan register\r\n    optionRegister = e => {\r\n        this.setState({option: \"register\"})\r\n    }\r\n\r\n    // Fungsi untuk meng-handle pilihan login\r\n    optionLogin = e => {\r\n        this.setState({option: \"login\"})\r\n    }\r\n\r\n    // Fungsi untuk meng-handle token\r\n    assignToken = function(tokenTemp) {\r\n        this.setState({token: tokenTemp})\r\n    }\r\n\r\n    // Fungsi untuk meng-handle list of mahasiswa\r\n    assignMahasiswa = function(data) {\r\n        this.setState({mahasiswa: data})\r\n    }\r\n\r\n    // Fungsi untuk meng-handle tipe searching \"byname\"\r\n    searchTypeName = e => {\r\n        this.setState({searchType: \"byname\"})\r\n        this.setState({page: 0})        // reset page\r\n        this.setState({searchTemp: this.state.search})\r\n    }\r\n\r\n    // Fungsi untuk meng-handle tipe searching \"byid\"\r\n    searchTypeId = e => {\r\n        this.setState({searchType: \"byid\"})\r\n        this.setState({page: 0 })       // reset page\r\n        this.setState({ searchTemp: this.state.search })\r\n    }\r\n\r\n    // Fungsi untuk meng-handle perubahan nilai pada sebuah variabel\r\n    handleChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    // Fungsi untuk meng-handle tombol next\r\n    handleNext = e => {\r\n        this.setState({page: (this.state.page + 1)})\r\n    }\r\n\r\n    // Fungsi untuk meng-handle tombol previous\r\n    handlePrev = e => {\r\n        this.setState({page: (this.state.page - 1)})\r\n    }\r\n\r\n    // Fungsi untuk meng-handle searching\r\n    handleSearch = e => {\r\n        e.preventDefault()\r\n\r\n        if (this.state.page > 0) {\r\n            this.setState({prev: false})\r\n        }\r\n        else {\r\n            this.setState({prev: true})\r\n        }\r\n\r\n        var data\r\n\r\n        if (this.state.searchType === \"byid\") { // a number from 0 to 9\r\n            data = {\r\n                \"query\": this.state.searchTemp,\r\n                \"count\": this.state.count,\r\n                \"page\": this.state.page\r\n            }\r\n        }\r\n        else {    // a Name\r\n            data = {\r\n                \"name\": this.state.searchTemp,\r\n                \"count\": this.state.count,\r\n                \"page\": this.state.page\r\n            }\r\n        }\r\n\r\n        var getRequest = {\r\n            method: 'GET',\r\n            url: 'https://api.stya.net/nim/' + this.state.searchType + \"?\" + this.serialize(data),\r\n            headers: {\r\n                'Auth-Token': this.state.token\r\n            }\r\n        }\r\n\r\n        axios(getRequest)\r\n            .then(response => {\r\n                var statusSearch = response.data.status\r\n\r\n                // output data (handleOutput)\r\n                if (response.data.code >= 0) {\r\n                    if (response.data.code === 20) {\r\n                        data.page = data.page + 1\r\n                        getRequest.url = 'https://api.stya.net/nim/' + this.state.searchType + \"?\" + this.serialize(data)\r\n                        axios(getRequest)\r\n                            .then(response => {\r\n                                if (response.data.code === 0) {\r\n                                    this.setState({ next: true })\r\n                                }\r\n                                else if (response.data.code > 0) {\r\n                                    this.setState({ next: false })\r\n                                }\r\n                            })\r\n                            .catch(error => {\r\n                                console.log(error)\r\n                            })\r\n                    }\r\n                    else {\r\n                        this.setState({next: true})\r\n                    }\r\n                    this.assignMahasiswa(response.data.payload)\r\n                }\r\n                else {\r\n                    ReactDOM.render(<div>{statusSearch}</div>, document.getElementById('statusSearch'))\r\n                    this.setState({prev: true})\r\n                    this.setState({next: true})\r\n                    this.setState({page: 0})\r\n                    this.assignMahasiswa([])\r\n                    this.setState({user: \"\"})\r\n                    this.assignToken(\"\")\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    // Fungsi untuk meng-handle register dan login\r\n    handleRegisterLogin = e => {\r\n        e.preventDefault()\r\n\r\n        var data = {\r\n            \"username\" : this.state.username,\r\n            \"password\" : this.state.password\r\n        }\r\n\r\n        // Post request using axios\r\n        var postRequest = {\r\n            method: 'POST',\r\n            url: 'https://api.stya.net/nim/' + this.state.option,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            },\r\n            data: this.serialize(data)\r\n        };\r\n\r\n\r\n        axios(postRequest)\r\n            .then(response => {\r\n                var statusLogin = response.data.status\r\n                if (response.data.code === 0) {\r\n                    ReactDOM.render(<div>{this.state.option} Successful</div>, document.getElementById('statusLogin'))\r\n                    ReactDOM.render(<div></div>, document.getElementById('statusSearch'))\r\n                    this.setState({user: this.state.username})\r\n                    this.assignToken(response.data.token)\r\n\r\n                    // jika login berhasil, set cookie dengan username dan token sekarang melalui json string\r\n                    this.setCookie(JSON.stringify({\"username\": this.state.username, \"token\": this.state.token}))\r\n                }\r\n                else {\r\n                    ReactDOM.render(<div>{statusLogin}</div>, document.getElementById('statusLogin'))\r\n                    this.setState({user: \"\"})\r\n                    this.assignToken(\"\")\r\n                    document.cookie = \"username=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n                }          \r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { username, password, search, mahasiswa, prev, next, user } = this.state\r\n        /*\r\n        if (Token.token !== \"-\") {\r\n            this.assignToken(Token.token)\r\n            this.setState({ username: Token.username })\r\n        }\r\n        */\r\n        return (\r\n            <div>\r\n                <h1>\r\n                    A Simple ITB NIM Finder\r\n                </h1>\r\n                <form onSubmit={this.handleRegisterLogin}>\r\n                    <div>\r\n                        <input placeholder=\"Username\" ref=\"username\" type=\"text\" name=\"username\" value={username} onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div>\r\n                        <input placeholder=\"Password\" ref=\"password\" type=\"password\" name=\"password\" value={password} onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <button className=\"button1\" type=\"submit\" onClick={this.optionRegister}><span>Register</span></button>\r\n                    <button className=\"button1\" type=\"submit\" onClick={this.optionLogin}><span>Login</span></button>\r\n                    <h3 id=\"statusLogin\"> </h3>\r\n                </form>\r\n\r\n                <br></br>\r\n\r\n                <form onSubmit={this.handleSearch}>\r\n                    <h3>Welcome, {user}</h3>\r\n                    <div>\r\n                        <input placeholder=\"Type in Name or NIM...\" ref=\"search\" type=\"text\" name=\"search\" value={search} onChange={this.handleChange}></input>\r\n                        <button className=\"button2\" type=\"submit\" onClick={this.searchTypeName}><span>Search by Name</span></button>\r\n                        <button className=\"button2\" type=\"submit\" onClick={this.searchTypeId}><span>Search by NIM</span></button>\r\n                    </div>\r\n                    <h3 id=\"statusSearch\"> </h3>\r\n                    <br></br>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>Nama</th>\r\n                                <th>NIM TPB</th>\r\n                                <th>NIM Jurusan</th>\r\n                                <th>Prodi</th>\r\n                            </tr>\r\n                            {\r\n                                mahasiswa.length ?\r\n                                    mahasiswa.map(mhs => (<tr key={mhs.nim_tpb}>\r\n                                        <td>{mhs.name}</td>\r\n                                        <td>{mhs.nim_tpb}</td>\r\n                                        <td>{mhs.nim_jur}</td>\r\n                                        <td>{mhs.prodi}</td>\r\n                                    </tr>)) :\r\n                                    null\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                    <p align=\"center\">\r\n                        <button className=\"button3\" type=\"submit\" disabled={prev} onClick={this.handlePrev}><span>Prev</span></button>\r\n                        <label>{this.state.page + 1}</label>\r\n                        <button className=\"button4\" type=\"submit\" disabled={next} onClick={this.handleNext}><span>Next</span></button>\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostForm","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n// import GetForm from './components/GetForm';\nimport PostForm from './components/PostForm';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<PostForm />\n\t\t\t\t{ /*<GetForm />*/ }\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}